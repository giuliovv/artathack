{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useStyles","makeStyles","theme","text","padding","spacing","paper","paddingBottom","list","marginBottom","width","subheader","backgroundColor","palette","background","appBar","top","bottom","grow","flexGrow","fabButton","position","zIndex","left","right","margin","fullList","root","display","BottomAppBar","React","useState","state","setState","toggleDrawer","anchor","open","event","type","key","AppBar","color","className","SwipeableTemporaryDrawer","Toolbar","IconButton","edge","aria-label","onClick","Avatar","alt","currentUser","displayName","src","photoURL","signOut","props","classes","map","Fragment","SwipeableDrawer","onClose","onOpen","clsx","role","onKeyDown","List","ListItem","Divider","LocationOk","isGeolocationAvailable","Typography","style","isGeolocationEnabled","coords","localStorage","setItem","saveableCanvas","getSaveData","collection","doc","email","set","disegno","base64","canvasContainer","children","toDataURL","lat","latitude","lon","longitude","Disegno","datiDisegno","giaFatto","handleChangeComplete","hex","localDisegno","getItem","get","then","exists","dis_","data","undefined","catch","err","Fab","trigger","this","onChangeComplete","disableAlpha","undo","clear","hideInterface","isMobile","ref","canvasDraw","saveData","brushColor","window","innerWidth","height","innerHeight","Component","SignInScreen","isSignedIn","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","unregisterAuthObserver","onAuthStateChanged","user","Grid","container","direction","alignItems","justify","minHeight","item","xs","variant","component","firebaseAuth","geolocated","positionOptions","enableHighAccuracy","watchPosition","userDecisionTimeout","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.39028f0f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport * as firebase from \"firebase/app\";\nimport 'firebaseui'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport 'firebase/analytics';\nimport '@firebase/firestore'\n\nimport { geolocated } from \"react-geolocated\";\n\nimport Popup from \"reactjs-popup\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport { SketchPicker } from 'react-color';\nimport { isMobile } from \"react-device-detect\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport clsx from 'clsx';\nimport Divider from '@material-ui/core/Divider';\nimport Fab from '@material-ui/core/Fab';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ColorizeIcon from '@material-ui/icons/Colorize';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport SaveIcon from '@material-ui/icons/Save';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyADxgU6pKy-sqxGhPHkqAoW_VqG85VsQB8\",\n  authDomain: \"spesa-2de52.firebaseapp.com\",\n  databaseURL: \"https://spesa-2de52.firebaseio.com\",\n  projectId: \"spesa-2de52\",\n  storageBucket: \"spesa-2de52.appspot.com\",\n  messagingSenderId: \"232880545893\",\n  appId: \"1:232880545893:web:57cbf0ac1e002b3625a68c\",\n  measurementId: \"G-K5TC2JJMH8\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\n\nconst useStyles = makeStyles(theme => ({\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  list: {\n    marginBottom: theme.spacing(2),\n    width: 250,\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabButton: {\n    position: 'absolute',\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: '0 auto',\n  },\n  fullList: {\n    width: 'auto',\n  },\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nfunction BottomAppBar() {\n  const [state, setState] = React.useState({\n    left: false,\n  });\n  const toggleDrawer = (anchor, open) => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n  return (\n    <AppBar position=\"fixed\" color=\"primary\" className={useStyles().appBar}>\n      <SwipeableTemporaryDrawer state={state} setState={setState} toggleDrawer={toggleDrawer}/>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\" onClick={toggleDrawer(\"left\", true)}>\n            <MenuIcon />\n          </IconButton>\n          <div className={useStyles().grow} />\n          <Avatar alt={firebase.auth().currentUser.displayName} src={firebase.auth().currentUser.photoURL} />\n          <IconButton color=\"inherit\" aria-label=\"logout\" onClick={() => {firebase.auth().signOut()}}>\n            <ExitToAppIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n  )\n}\n\nfunction SwipeableTemporaryDrawer(props) {\n  const classes = useStyles();\n  let state = props.state;\n  let toggleDrawer = props.toggleDrawer;\n\n  const list = anchor => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        <ListItem>\n          <div className={classes.root}>\n            <Avatar alt={firebase.auth().currentUser.displayName} src={firebase.auth().currentUser.photoURL} />\n          </div>\n        </ListItem>\n      </List>\n      <Divider />\n    </div>\n  );\n\n  return (\n    <div>\n      {['left'].map(anchor => (\n        <React.Fragment key={anchor}>\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n\nfunction LocationOk(props){\n  if (! props.isGeolocationAvailable){\n    return <Typography color=\"textPrimary\" style={{\"text-transform\": \"lowercase\"}}>\n      La posizione non è disponibile :(\n      </Typography>\n  }\n  if (! props.isGeolocationEnabled){\n    return <Typography color=\"textPrimary\" style={{\"text-transform\": \"lowercase\"}}>\n      Per favore abilita il GPS per salvare.\n      </Typography>\n  }\n  if (props.isGeolocationAvailable && props.isGeolocationEnabled && props.coords != null){\n    localStorage.setItem(\n      \"arteInsiemeSalvataggio\",\n      props.saveableCanvas.getSaveData()\n    );\n    const db = firebase.firestore();\n    db.collection(\"disegni\").doc(firebase.auth().currentUser.email).set({\n      disegno: props.saveableCanvas.getSaveData(),\n      base64: props.saveableCanvas.canvasContainer.children[1].toDataURL(),\n      lat: props.coords.latitude,\n      lon: props.coords.longitude\n    });       \n  } \n  return <Typography color=\"textPrimary\">\n      Salvataggio completato.\n      </Typography>\n}\n\nclass Disegno extends React.Component {\n\n  state = {\n    color: \"#444\",\n    datiDisegno: null,\n    giaFatto: false\n  };\n\n  handleChangeComplete = (color, event) => {\n    this.setState({ color: color.hex });\n  };\n\n  componentDidMount() {\n    var localDisegno = localStorage.getItem(\"arteInsiemeSalvataggio\");\n    const db = firebase.firestore();\n    let cityRef = db.collection(\"disegni\").doc(firebase.auth().currentUser.email);\n    cityRef.get()\n      .then(doc => {\n        if (doc.exists) {\n          let dis_ = doc.data().disegno;\n          if(dis_ !== undefined){\n            this.setState({ datiDisegno: dis_ }).catch(err =>{});\n          }\n        }\n      })\n      .catch(err => {\n        if (localDisegno != null){\n          this.setState({ \n            datiDisegno: localDisegno,\n           })\n        }\n      });\n}\n\n  render() {\n    return (\n      <div>\n        <Fab \n          color=\"secondary\" \n          aria-label=\"colore\"\n          style={{\n            margin: 0,\n            zIndex: 1,\n            top: 'auto',\n            right: 20,\n            bottom: 260,\n            left: 'auto',\n            position: 'fixed',\n          }}\n          >\n            <Popup trigger={<ColorizeIcon />} position=\"left center\">\n              <SketchPicker\n                color={ this.state.color }\n                onChangeComplete={ this.handleChangeComplete }\n                disableAlpha={ true }\n              />\n            </Popup>\n        </Fab>\n        <Fab \n          color=\"secondary\" \n          aria-label=\"save\"\n          style={{\n            margin: 0,\n            zIndex: 1,\n            top: 'auto',\n            right: 20,\n            bottom: 200,\n            left: 'auto',\n            position: 'fixed',\n          }}\n          >\n            <Popup trigger={\n            <SaveIcon />} \n            position=\"left center\">\n            <LocationOk \n            isGeolocationAvailable={this.props.isGeolocationAvailable}\n            isGeolocationEnabled={this.props.isGeolocationEnabled}\n            coords={this.props.coords}\n            saveableCanvas={this.saveableCanvas}\n            />\n          </Popup>\n        </Fab>\n        <Fab \n          color=\"secondary\" \n          aria-label=\"undo\"\n          style={{\n            margin: 0,\n            zIndex: 1,\n            // top: 'auto',\n            right: 20,\n            bottom: 140,\n            left: 'auto',\n            position: 'fixed',\n          }}\n          >\n            <UndoIcon onClick={() => {\n              this.saveableCanvas.undo();\n            }}/>\n        </Fab>\n        <Fab \n          color=\"secondary\" \n          aria-label=\"clear\"\n          style={{\n            margin: 0,\n            zIndex: 1,\n            top: 'auto',\n            right: 20,\n            bottom: 80,\n            left: 'auto',\n            position: 'fixed',\n          }}\n          >\n            <DeleteIcon onClick={() => {\n              this.saveableCanvas.clear();\n            }}/>\n        </Fab>\n          <CanvasDraw\n          hideInterface={(isMobile) ? true : false}\n          ref={canvasDraw => {\n            this.saveableCanvas = canvasDraw;\n          }}\n          saveData={this.state.datiDisegno}\n          brushColor={this.state.color}\n          style={{\n            width: window.innerWidth,\n            height: window.innerHeight - 65,\n            zIndex: -1,\n            position: \"absolute\",\n            // height: \"40%\"\n            // boxShadow:\n            //   \"0 13px 27px -5px rgba(50, 50, 93, 0.25),    0 8px 16px -8px rgba(0, 0, 0, 0.3)\"\n          }}\n          />\n      </div>\n    );\n  }\n}\n\n\nclass SignInScreen extends React.Component {\n\n  // The component's Local state.\n  state = {\n    isSignedIn: false // Local signed-in state.\n  };\n\n  // Configure FirebaseUI.\n  uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      // Avoid redirects after sign-in.\n      signInSuccessWithAuthResult: () => false\n    }\n  };\n\n  // Listen to the Firebase Auth state and set the local state.\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n        (user) => this.setState({isSignedIn: !!user})\n    );\n  }\n  \n  // Make sure we un-register Firebase observers when the component unmounts.\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <div>\n          <Grid\n            container\n            spacing={5}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: '100vh' }}\n          >\n\n            <Grid item xs={12}>\n              <Typography variant=\"h1\" component=\"h2\">\n              Arte tutti insieme\n              </Typography>\n            </Grid>  \n            <Grid item xs={12}>\n            <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()}/>\n            </Grid>   \n          </Grid>\n          \n        </div>\n      );\n    }\n    return (\n      <div>\n        <BottomAppBar />\n        <Disegno \n        isGeolocationAvailable={this.props.isGeolocationAvailable} \n        isGeolocationEnabled={this.props.isGeolocationEnabled}\n        coords={this.props.coords}\n        />\n      </div>\n    );\n  }\n}\n\nfunction App(props) {\n  return (\n      <div>\n        <SignInScreen \n        isGeolocationAvailable={props.isGeolocationAvailable} \n        isGeolocationEnabled={props.isGeolocationEnabled}\n        coords={props.coords}\n        />\n      </div>\n    );\n}\n\nexport default geolocated({\n  positionOptions: {\n      enableHighAccuracy: false,\n  },\n  watchPosition: true,\n  userDecisionTimeout: 5000,\n})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}