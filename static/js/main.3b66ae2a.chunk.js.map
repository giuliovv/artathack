{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useStyles","makeStyles","theme","text","padding","spacing","paper","paddingBottom","list","marginBottom","width","subheader","backgroundColor","palette","background","appBar","top","bottom","grow","flexGrow","fabButton","position","zIndex","left","right","margin","fullList","root","display","BottomAppBar","props","AppBar","color","className","Toolbar","IconButton","edge","aria-label","onClick","handleChange","Avatar","alt","currentUser","displayName","src","photoURL","signOut","LocationOk","isGeolocationAvailable","Typography","style","isGeolocationEnabled","coords","localStorage","setItem","saveableCanvas","getSaveData","firestore","GeoFirestore","collection","doc","email","set","disegno","base64","canvasContainer","children","toDataURL","coordinates","GeoPoint","latitude","longitude","VistaDisegni","React","Component","Disegno","state","datiDisegno","giaFatto","handleChangeComplete","event","setState","hex","localDisegno","getItem","get","then","exists","dis_","data","d","undefined","catch","err","this","vistaDisegni","Fab","trigger","onChangeComplete","disableAlpha","undo","clear","hideInterface","isMobile","ref","canvasDraw","saveData","brushColor","window","innerWidth","height","innerHeight","SignInScreen","isSignedIn","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","unregisterAuthObserver","onAuthStateChanged","user","Grid","container","direction","alignItems","justify","minHeight","item","xs","variant","component","firebaseAuth","geolocated","positionOptions","enableHighAccuracy","watchPosition","userDecisionTimeout","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.3b66ae2a.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport * as firebase from \"firebase/app\";\nimport 'firebaseui'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport 'firebase/analytics';\nimport '@firebase/firestore'\nimport { GeoCollectionReference, GeoFirestore, GeoQuery, GeoQuerySnapshot } from 'geofirestore';\n\nimport { geolocated } from \"react-geolocated\";\n\nimport Popup from \"reactjs-popup\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport { SketchPicker } from 'react-color';\nimport { isMobile } from \"react-device-detect\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ColorizeIcon from '@material-ui/icons/Colorize';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ImageIcon from '@material-ui/icons/Image';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyADxgU6pKy-sqxGhPHkqAoW_VqG85VsQB8\",\n  authDomain: \"spesa-2de52.firebaseapp.com\",\n  databaseURL: \"https://spesa-2de52.firebaseio.com\",\n  projectId: \"spesa-2de52\",\n  storageBucket: \"spesa-2de52.appspot.com\",\n  messagingSenderId: \"232880545893\",\n  appId: \"1:232880545893:web:57cbf0ac1e002b3625a68c\",\n  measurementId: \"G-K5TC2JJMH8\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\n\n\nconst useStyles = makeStyles(theme => ({\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  list: {\n    marginBottom: theme.spacing(2),\n    width: 250,\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabButton: {\n    position: 'absolute',\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: '0 auto',\n  },\n  fullList: {\n    width: 'auto',\n  },\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nfunction BottomAppBar(props) {\n  return (\n    <AppBar position=\"fixed\" color=\"primary\" className={useStyles().appBar}>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\" onClick={() => {props.handleChange()}}>\n            <ImageIcon />\n          </IconButton>\n          <div className={useStyles().grow} />\n          <Avatar alt={firebase.auth().currentUser.displayName} src={firebase.auth().currentUser.photoURL} />\n          <IconButton color=\"inherit\" aria-label=\"logout\" onClick={() => {firebase.auth().signOut()}}>\n            <ExitToAppIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n  )\n}\n\nfunction LocationOk(props){\n  if (! props.isGeolocationAvailable){\n    return <Typography color=\"textPrimary\" style={{\"text-transform\": \"lowercase\"}}>\n      La posizione non Ã¨ disponibile :(\n      </Typography>\n  }\n  if (! props.isGeolocationEnabled){\n    return <Typography color=\"textPrimary\" style={{\"text-transform\": \"lowercase\"}}>\n      Per favore abilita il GPS per salvare.\n      </Typography>\n  }\n  if (props.isGeolocationAvailable && props.isGeolocationEnabled && props.coords != null){\n    localStorage.setItem(\n      \"arteInsiemeSalvataggio\",\n      props.saveableCanvas.getSaveData()\n    );\n    const firestore = firebase.firestore();\n    const geoFirestore = new GeoFirestore(firestore);\n    const geoCollectionRef = geoFirestore.collection('disegni');\n    geoCollectionRef.doc(firebase.auth().currentUser.email).set({\n      disegno: props.saveableCanvas.getSaveData(),\n      base64: props.saveableCanvas.canvasContainer.children[1].toDataURL(),\n      coordinates: new firebase.firestore.GeoPoint(props.coords.latitude, props.coords.longitude),\n    });\n  } \n  return <Typography color=\"textPrimary\">\n      Salvataggio completato.\n      </Typography>\n}\n\nclass VistaDisegni extends React.Component {\n  render() {\n    return <p>CIAONE</p>\n  }\n}\n\nclass Disegno extends React.Component {\n\n  state = {\n    color: \"#444\",\n    datiDisegno: null,\n    giaFatto: false\n  };\n\n  handleChangeComplete = (color, event) => {\n    this.setState({ color: color.hex });\n  };\n\n  componentDidMount() {\n    var localDisegno = localStorage.getItem(\"arteInsiemeSalvataggio\");\n    const db = firebase.firestore();\n    let cityRef = db.collection(\"disegni\").doc(firebase.auth().currentUser.email);\n    cityRef.get()\n      .then(doc => {\n        if (doc.exists) {\n          let dis_ = doc.data().d.disegno;\n          if(dis_ !== undefined){\n            this.setState({ datiDisegno: dis_ }).catch(err =>{});\n          }\n        }\n      })\n      .catch(err => {\n        if (localDisegno != null){\n          this.setState({ \n            datiDisegno: localDisegno,\n           })\n        }\n      });\n}\n\n  render() {\n    if (this.props.vistaDisegni){\n      return (<VistaDisegni />)\n    }\n    return (\n      <div>\n        <Fab \n          color=\"secondary\" \n          aria-label=\"colore\"\n          style={{\n            margin: 0,\n            zIndex: 1,\n            top: 'auto',\n            right: 20,\n            bottom: 260,\n            left: 'auto',\n            position: 'fixed',\n          }}\n          >\n            <Popup trigger={<ColorizeIcon />} position=\"left center\">\n              <SketchPicker\n                color={ this.state.color }\n                onChangeComplete={ this.handleChangeComplete }\n                disableAlpha={ true }\n              />\n            </Popup>\n        </Fab>\n        <Fab \n          color=\"secondary\" \n          aria-label=\"save\"\n          style={{\n            margin: 0,\n            zIndex: 1,\n            top: 'auto',\n            right: 20,\n            bottom: 200,\n            left: 'auto',\n            position: 'fixed',\n          }}\n          >\n            <Popup trigger={\n            <SaveIcon />} \n            position=\"left center\">\n            <LocationOk \n            isGeolocationAvailable={this.props.isGeolocationAvailable}\n            isGeolocationEnabled={this.props.isGeolocationEnabled}\n            coords={this.props.coords}\n            saveableCanvas={this.saveableCanvas}\n            />\n          </Popup>\n        </Fab>\n        <Fab \n          color=\"secondary\" \n          aria-label=\"undo\"\n          style={{\n            margin: 0,\n            zIndex: 1,\n            // top: 'auto',\n            right: 20,\n            bottom: 140,\n            left: 'auto',\n            position: 'fixed',\n          }}\n          >\n            <UndoIcon onClick={() => {\n              this.saveableCanvas.undo();\n            }}/>\n        </Fab>\n        <Fab \n          color=\"secondary\" \n          aria-label=\"clear\"\n          style={{\n            margin: 0,\n            zIndex: 1,\n            top: 'auto',\n            right: 20,\n            bottom: 80,\n            left: 'auto',\n            position: 'fixed',\n          }}\n          >\n            <DeleteIcon onClick={() => {\n              this.saveableCanvas.clear();\n            }}/>\n        </Fab>\n          <CanvasDraw\n          hideInterface={(isMobile) ? true : false}\n          ref={canvasDraw => {\n            this.saveableCanvas = canvasDraw;\n          }}\n          saveData={this.state.datiDisegno}\n          brushColor={this.state.color}\n          style={{\n            width: window.innerWidth,\n            height: window.innerHeight - 65,\n            zIndex: -1,\n            position: \"absolute\",\n            // height: \"40%\"\n            // boxShadow:\n            //   \"0 13px 27px -5px rgba(50, 50, 93, 0.25),    0 8px 16px -8px rgba(0, 0, 0, 0.3)\"\n          }}\n          />\n      </div>\n    );\n  }\n}\n\n\nclass SignInScreen extends React.Component {\n\n  // The component's Local state.\n  state = {\n    isSignedIn: false, // Local signed-in state.\n  };\n\n  // Configure FirebaseUI.\n  uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      // Avoid redirects after sign-in.\n      signInSuccessWithAuthResult: () => false\n    }\n  };\n\n  // Listen to the Firebase Auth state and set the local state.\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n        (user) => this.setState({isSignedIn: !!user})\n    );\n  }\n  \n  // Make sure we un-register Firebase observers when the component unmounts.\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n\n  handleChange = () => {\n    this.setState({vistaDisegni: !this.state.vistaDisegni});\n  };\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <div>\n          <Grid\n            container\n            spacing={5}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: '100vh' }}\n          >\n\n            <Grid item xs={12}>\n              <Typography variant=\"h1\" component=\"h2\">\n              Art@Hack\n              </Typography>\n            </Grid>  \n            <Grid item xs={12}>\n            <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()}/>\n            </Grid>   \n          </Grid>\n          \n        </div>\n      );\n    }\n    return (\n      <div>\n        <BottomAppBar \n        vistaDisegni={this.state.vistaDisegni}\n        handleChange={this.handleChange}\n        />\n        <Disegno \n        isGeolocationAvailable={this.props.isGeolocationAvailable} \n        isGeolocationEnabled={this.props.isGeolocationEnabled}\n        coords={this.props.coords}\n        vistaDisegni={this.state.vistaDisegni}\n        />\n      </div>\n    );\n  }\n}\n\nfunction App(props) {\n  return (\n      <div>\n        <SignInScreen \n        isGeolocationAvailable={props.isGeolocationAvailable} \n        isGeolocationEnabled={props.isGeolocationEnabled}\n        coords={props.coords}\n        />\n      </div>\n    );\n}\n\nexport default geolocated({\n  positionOptions: {\n      enableHighAccuracy: false,\n  },\n  watchPosition: true,\n  userDecisionTimeout: 5000,\n})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}