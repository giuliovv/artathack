{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","puntoSpeciale","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","theme","createMuiTheme","palette","background","default","primary","main","secondary","status","danger","typography","h2","color","h1","fontFamily","responsiveFontSizes","useStyles","makeStyles","text","padding","spacing","paper","paddingBottom","list","marginBottom","width","subheader","backgroundColor","appBar","top","bottom","grow","flexGrow","fabButton","position","zIndex","left","right","margin","fullList","media","height","footer","shadows","root","display","BottomAppBar","props","AppBar","className","Toolbar","IconButton","edge","aria-label","onClick","handleChange","Button","window","open","style","Typography","Avatar","alt","currentUser","displayName","src","photoURL","signOut","LocationOk","latitude","longitude","testo","isGeolocationAvailable","isGeolocationEnabled","coords","localStorage","setItem","saveableCanvas","getSaveData","firestore","GeoFirestore","collection","doc","email","set","disegno","base64","canvasContainer","children","toDataURL","coordinates","GeoPoint","timestamp","Date","VistaDisegni","query","db","geofirestore","useState","photos","setPhotos","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","useCallback","event","photo","index","altezza","innerHeight","larghezza","isMobile","undefined","innerWidth","near","center","radius","limit","length","get","then","value","docs","map","v","data","lenght","overflow","onClose","currentIndex","views","x","srcset","srcSet","caption","title","Disegno","state","datiDisegno","giaFatto","handleChangeComplete","setState","hex","localDisegno","getItem","exists","dis_","d","catch","err","this","vistaDisegni","Fab","trigger","onChangeComplete","disableAlpha","undo","clear","hideInterface","ref","canvasDraw","saveData","brushColor","React","Component","Footer","elevation","SignInScreen","isSignedIn","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","unregisterAuthObserver","onAuthStateChanged","user","Grid","container","direction","alignItems","justify","minHeight","item","xs","Card","maxWidth","CardMedia","image","logo","component","variant","firebaseAuth","geolocated","positionOptions","enableHighAccuracy","watchPosition","userDecisionTimeout","ThemeProvider","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.c83bd691.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.285086bb.svg\";","import React, { useState, useCallback } from 'react';\nimport './App.css';\n\nimport * as firebase from \"firebase/app\";\nimport 'firebaseui'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport 'firebase/analytics';\nimport '@firebase/firestore'\nimport { GeoCollectionReference, GeoFirestore, GeoQuery, GeoQuerySnapshot } from 'geofirestore';\n\nimport { geolocated } from \"react-geolocated\";\nimport Gallery from \"react-photo-gallery\";\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\n\nimport Popup from \"reactjs-popup\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport { SketchPicker } from 'react-color';\nimport { isMobile } from \"react-device-detect\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Card from '@material-ui/core/Card';\nimport Fab from '@material-ui/core/Fab';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { createMuiTheme, makeStyles, ThemeProvider, responsiveFontSizes } from '@material-ui/core/styles';\n\nimport ColorizeIcon from '@material-ui/icons/Colorize';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport AddIcon from '@material-ui/icons/Add';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ImageIcon from '@material-ui/icons/Image';\n\nimport logo from './logo.svg';\n\nconst puntoSpeciale = [45.4642, 9.1900];\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyADxgU6pKy-sqxGhPHkqAoW_VqG85VsQB8\",\n  authDomain: \"spesa-2de52.firebaseapp.com\",\n  databaseURL: \"https://spesa-2de52.firebaseio.com\",\n  projectId: \"spesa-2de52\",\n  storageBucket: \"spesa-2de52.appspot.com\",\n  messagingSenderId: \"232880545893\",\n  appId: \"1:232880545893:web:57cbf0ac1e002b3625a68c\",\n  measurementId: \"G-K5TC2JJMH8\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nlet theme = createMuiTheme({\n  palette: {\n    background: {\n      default: \"#315190\"\n    },\n    primary: { main: '#315190' },\n    secondary: { main: '#40bd47' },\n  },\n  status: {\n    danger: 'orange',\n  },\n  typography: {\n    h2: {\n      color: \"#fed111\"\n    },\n    h1: {\n      color: \"#fed111\"\n    },\n    fontFamily: \"'Baloo Da 2', cursive\",\n  }\n});\ntheme = responsiveFontSizes(theme);\n\nconst useStyles = makeStyles(theme => ({\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  list: {\n    marginBottom: theme.spacing(2),\n    width: 250,\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabButton: {\n    position: 'absolute',\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: '0 auto',\n  },\n  fullList: {\n    width: 'auto',\n  },\n  media: {\n    height: 140,\n  },\n  footer: {\n    top: 'auto',\n    bottom: 0,\n    shadows: [\"none\"],\n  },\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nfunction BottomAppBar(props) {\n  return (\n    <AppBar position=\"fixed\" color=\"primary\" className={useStyles().appBar}>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\" onClick={() => {props.handleChange()}}>\n            <ImageIcon />\n          </IconButton>\n          <Button\n           onClick={() => { window.open(\"https://www.gofundme.com/f/hackhome-sostieni-gli-ospedali-della-lombardia\") }}\n          color='inherit'\n          style={{\n            left: 20\n          }}\n          >\n          <Typography>\n            Dona ora!\n          </Typography>\n      </Button>\n          <div className={useStyles().grow} />\n          <Avatar alt={firebase.auth().currentUser.displayName} src={firebase.auth().currentUser.photoURL} />\n          <IconButton color=\"inherit\" aria-label=\"logout\" onClick={() => {firebase.auth().signOut()}}>\n            <ExitToAppIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n  )\n}\n\nfunction LocationOk(props){\n  let testo = \"Salvataggio completato.\"\n  let latitude, longitude;\n  if (! props.isGeolocationAvailable || ! props.isGeolocationEnabled){\n    testo = \"Salvataggio completato, abilita il gps per salvare il disegno nella tua posizione sul murales.\"\n  }\n  if (props.coords == null){\n    latitude = puntoSpeciale[0];\n    longitude = puntoSpeciale[1];\n  }\n  else {\n    latitude = props.coords.latitude;\n    longitude = props.coords.longitude;\n  }\n  localStorage.setItem(\n    \"arteInsiemeSalvataggio\",\n    props.saveableCanvas.getSaveData()\n  );\n  const firestore = firebase.firestore();\n  const geoFirestore = new GeoFirestore(firestore);\n  const geoCollectionRef = geoFirestore.collection('disegni');\n  geoCollectionRef.doc(firebase.auth().currentUser.email).set({\n    disegno: props.saveableCanvas.getSaveData(),\n    base64: props.saveableCanvas.canvasContainer.children[1].toDataURL(),\n    coordinates: new firebase.firestore.GeoPoint(latitude, longitude),\n    timestamp: + new Date(),\n  });\n  return <Typography color=\"textPrimary\" style={{\"textTransform\": \"lowercase\"}}>\n      {testo}\n      </Typography>\n}\n\nfunction VistaDisegni (props) {\n  const db = firebase.firestore();\n  const geofirestore = new GeoFirestore(db);\n  const [photos, setPhotos] = useState([]);\n\n  const [currentImage, setCurrentImage] = useState(0);\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n  const openLightbox = useCallback((event, { photo, index }) => {\n    setCurrentImage(index);\n    setViewerIsOpen(true);\n  }, []);\n\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setViewerIsOpen(false);\n  };\n\n  var altezza = window.innerHeight;\n  var larghezza = (isMobile) ? undefined : window.innerWidth;\n  var query;\n  if (props.isGeolocationAvailable && props.isGeolocationEnabled && props.coords != null){\n    query = geofirestore.collection('disegni').near({ center: new firebase.firestore.GeoPoint(props.coords.latitude, props.coords.longitude), radius: 1000 }).limit(30);\n  }\n  else {\n    query = geofirestore.collection('disegni').near({ center: new firebase.firestore.GeoPoint(puntoSpeciale[0], puntoSpeciale[1]), radius: 1000 }).limit(30);\n  }\n  if (photos.length === 0){\n    query.get().then((value) => {\n      setPhotos(value.docs.map((v) => ({\n        src: v.data().base64,\n        height: altezza,\n        width: larghezza,\n      })));\n    });\n  }\n  if (photos.lenght < 1){\n    return <p>Ancora non ci sono immagini in questa zona, aggiungi tu la prima!</p>\n  }\n  return (\n    <div style={{overflow: 'auto', height: '100vh', display: 'block', position:\"relative\", marginBottom:\"700px\"}}>\n      <Gallery photos={photos} onClick={openLightbox}/>\n      <ModalGateway>\n        {viewerIsOpen ? (\n          <Modal onClose={closeLightbox}>\n            <Carousel\n              currentIndex={currentImage}\n              views={photos.map(x => ({\n                ...x,\n                srcset: x.srcSet,\n                caption: x.title\n              }))}\n            />\n          </Modal>\n        ) : null}\n      </ModalGateway>\n    </div>\n  )\n}\n\nclass Disegno extends React.Component {\n\n  state = {\n    color: \"#444\",\n    datiDisegno: null,\n    giaFatto: false\n  };\n\n  handleChangeComplete = (color, event) => {\n    this.setState({ color: color.hex });\n  };\n\n  componentDidMount() {\n    var localDisegno = localStorage.getItem(\"arteInsiemeSalvataggio\");\n    const db = firebase.firestore();\n    let cityRef = db.collection(\"disegni\").doc(firebase.auth().currentUser.email);\n    cityRef.get()\n      .then(doc => {\n        if (doc.exists) {\n          let dis_ = doc.data().d.disegno;\n          if(dis_ !== undefined){\n            this.setState({ datiDisegno: dis_ }).catch(err =>{});\n          }\n        }\n      })\n      .catch(err => {\n        if (localDisegno != null){\n          this.setState({\n            datiDisegno: localDisegno,\n           })\n        }\n      });\n}\n\n  render() {\n    if (this.props.vistaDisegni){\n      return (<VistaDisegni\n            isGeolocationAvailable={this.props.isGeolocationAvailable}\n            isGeolocationEnabled={this.props.isGeolocationEnabled}\n            coords={this.props.coords}\n      />)\n    }\n    return (\n      <div>\n\n      <Fab\n      color=\"secondary\"\n      aria-label=\"altro\"\n      style={{\n        margin: 0,\n        zIndex: 1,\n        top: 'auto',\n        right: 20,\n        bottom: 80,\n        left: 'auto',\n        position: 'fixed',\n      }}>\n      <Popup trigger={\n      <AddIcon style={{ color: \"white\" }}/>}\n      position=\"left center\">\n\n\n        <Fab\n          color=\"secondary\"\n          aria-label=\"colore\"\n          style={{\n            margin: 0,\n            zIndex: 1,\n            top: 'auto',\n            right: 20,\n            bottom: 260,\n            left: 'auto',\n            position: 'fixed',\n          }}\n          >\n            <Popup trigger={<ColorizeIcon style={{ color: \"white\" }}/>} position=\"left center\">\n              <SketchPicker\n                color={ this.state.color }\n                onChangeComplete={ this.handleChangeComplete }\n                disableAlpha={ true }\n              />\n            </Popup>\n        </Fab>\n        <Fab\n          color=\"secondary\"\n          aria-label=\"save\"\n          style={{\n            margin: 0,\n            zIndex: 1,\n            top: 'auto',\n            right: 20,\n            bottom: 200,\n            left: 'auto',\n            position: 'fixed',\n          }}\n          >\n            <Popup trigger={\n            <SaveIcon style={{ color: \"white\" }}/>}\n            position=\"left center\">\n            <LocationOk\n            isGeolocationAvailable={this.props.isGeolocationAvailable}\n            isGeolocationEnabled={this.props.isGeolocationEnabled}\n            coords={this.props.coords}\n            saveableCanvas={this.saveableCanvas}\n            />\n          </Popup>\n        </Fab>\n        <Fab\n          color=\"secondary\"\n          aria-label=\"undo\"\n          style={{\n            margin: 0,\n            zIndex: 1,\n            // top: 'auto',\n            right: 20,\n            bottom: 140,\n            left: 'auto',\n            position: 'fixed',\n          }}\n          >\n            <UndoIcon onClick={() => {\n              this.saveableCanvas.undo();\n            }}\n            style={{ color: \"white\" }}/>\n        </Fab>\n        <Fab\n          color=\"secondary\"\n          aria-label=\"clear\"\n          style={{\n            margin: 0,\n            zIndex: 1,\n            top: 'auto',\n            right: 20,\n            bottom: 80,\n            left: 'auto',\n            position: 'fixed',\n          }}\n          >\n            <DeleteIcon onClick={() => {\n              this.saveableCanvas.clear();\n            }} style={{ color: \"white\" }}/>\n        </Fab>\n\n        </Popup>\n        </Fab>\n\n          <CanvasDraw\n          hideInterface={(isMobile) ? true : false}\n          ref={canvasDraw => {\n            this.saveableCanvas = canvasDraw;\n          }}\n          saveData={this.state.datiDisegno}\n          brushColor={this.state.color}\n          style={{\n            width: window.innerWidth,\n            height: window.innerHeight - 65,\n            zIndex: -1,\n            position: \"absolute\",\n          }}\n          />\n      </div>\n    );\n  }\n}\n\nfunction Footer(){\n  return (\n    <AppBar position=\"fixed\" color=\"primary\" className={useStyles().footer} elevation={0}>\n      <Toolbar>\n        <Button color=\"secondary\" onClick={() => window.open(\"https://www.privacypolicygenerator.info/live.php?token=bOaq2FxZvBZ3mJY3PESMHOe27PREKKjp\")}>Privacy policy</Button>\n        <div className={useStyles().grow} />\n        <Typography>\n          Sponsorizzato da:\n        </Typography>\n        <Button color=\"secondary\" onClick={() => window.open(\"https://www.morocolor.it/\")}>Primo</Button>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nclass SignInScreen extends React.Component {\n\n  // The component's Local state.\n  state = {\n    isSignedIn: false, // Local signed-in state.\n  };\n\n  // Configure FirebaseUI.\n  uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      // Avoid redirects after sign-in.\n      signInSuccessWithAuthResult: () => false\n    }\n  };\n\n  // Listen to the Firebase Auth state and set the local state.\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n        (user) => this.setState({isSignedIn: !!user})\n    );\n  }\n\n  // Make sure we un-register Firebase observers when the component unmounts.\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n\n  handleChange = () => {\n    this.setState({vistaDisegni: !this.state.vistaDisegni});\n  };\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <div>\n          <div\n          style={{\n            backgroundColor: \"#315190\",\n            }}>\n            <Grid\n              container\n              spacing={5}\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n              style={{ minHeight: '100vh' }}\n            >\n              <Grid item xs={12} >\n              {/* <Avatar \n              alt=\"Remy Sharp\" \n              src={logo} \n              style={{\n                width: theme.spacing(25), \n                height: theme.spacing(25),\n                backgroundColor: 'transparent',\n                marginBottom: \"0px\"\n              }} \n              /> */}\n              <Card style={{ maxWidth: 345, backgroundColor: 'transparent', marginBottom:\"-50px\"}} elevation={0}>\n                <CardMedia\n                  style={{\n                    height: 200,\n                    backgroundColor: 'transparent',\n                  }}\n                  image={logo}\n                  title=\"Contemplative Reptile\"\n                  component=\"img\"\n                />\n                </Card>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"h1\" component=\"h2\">\n                Art@Hack\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n              <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()}/>\n              </Grid>\n            </Grid>\n          </div>\n          <Footer/>\n      </div>\n      );\n    }\n    return (\n      <div>\n        <BottomAppBar\n        vistaDisegni={this.state.vistaDisegni}\n        handleChange={this.handleChange}\n        />\n        <Disegno\n        isGeolocationAvailable={this.props.isGeolocationAvailable}\n        isGeolocationEnabled={this.props.isGeolocationEnabled}\n        coords={this.props.coords}\n        vistaDisegni={this.state.vistaDisegni}\n        />\n      </div>\n    );\n  }\n}\n\nfunction App(props) {\n  return (\n      <div>\n          <ThemeProvider theme={theme}>\n            <SignInScreen\n            isGeolocationAvailable={props.isGeolocationAvailable}\n            isGeolocationEnabled={props.isGeolocationEnabled}\n            coords={props.coords}\n            />\n          </ThemeProvider>\n      </div>\n    );\n}\n\nexport default geolocated({\n  positionOptions: {\n      enableHighAccuracy: false,\n  },\n  watchPosition: true,\n  userDecisionTimeout: 5000,\n})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}